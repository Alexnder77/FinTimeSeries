quarterly_OMXC20 <- as.data.frame(quarterly_OMXC20)
View(quarterly_OMXS30)
View(quarterly_OMXC20)
View(OMXC20)
View(OMXS30)
View(SwedenData)
write.csv(SwedenData, "filename.csv", row.names = FALSE)
# Load necessary libraries
library(dplyr)
library(readxl)
library(zoo)
DanishBNP <- read_excel("Qdata/gdp-denmark.xlsx", sheet = 1)
colnames(DanishBNP) <- c("Year_K", "BNP")
DanishBNP$Year_K <- gsub("K", " Q", DanishBNP$Year_K)
DanishBNP$Year_K <- as.yearqtr(DanishBNP$Year_K, format = "%Y Q%q")
DanishBNP$Date <- as.Date(DanishBNP$Year_K)  # Convert year-quarter to Date
SWEBNP <- read_excel("Qdata/gdp-sweden.xlsx", sheet = 1)
colnames(SWEBNP) <- c("Year_K", "BNP")
SWEBNP$Year_K <- gsub("K", " Q", SWEBNP$Year_K)
SWEBNP$Year_K <- as.yearqtr(SWEBNP$Year_K, format = "%Y Q%q")
SWEBNP$Date <- as.Date(SWEBNP$Year_K)  # Convert year-quarter to Date
DanishInflation <- read_excel("Qdata/inflation-denmark.xls", sheet = 1)
DanishInterestReate <- read_excel("Qdata/interestrate-denmark.xls", sheet = 1)
DanishUnemployment <- read_excel("Qdata/unemployment-denmark.xls", sheet = 1)
SWEInflation <- read_excel("Qdata/inflation-sweden.xls", sheet = 1)
SWEInterestRate <- read_excel("Qdata/interestrate-sweden.xls", sheet = 1)
SWEUnemployment <- read_excel("Qdata/unemployment-sweden.xls", sheet = 1)
OMXC20 <- read.csv("Qdata/OMX Copenhagen 20 Historical Data.csv")
OMXS30 <- read.csv("Qdata/OMX Stockholm 30 Historical Data.csv")
OMXC20 <- OMXC20[, c("Date", "Price")]
OMXS30 <- OMXS30[, c("Date", "Price")]
colnames(OMXC20) <- c("Date", "Close.Last")
colnames(OMXS30) <- c("Date", "Close.Last")
OMXC20 <- OMXC20 %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
OMXS30 <- OMXS30 %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
# Ensure numeric columns are indeed numeric
DanishInflation$Inflation <- as.numeric(DanishInflation$Inflation)
DanishInterestReate$Interest_Rate <- as.numeric(DanishInterestReate$Interest_Rate)
DanishUnemployment$Unemployment_Rate <- as.numeric(DanishUnemployment$Unemployment_Rate)
SWEInflation$Inflation <- as.numeric(SWEInflation$Inflation)
SWEInterestRate$Interest_Rate <- as.numeric(SWEInterestRate$Interest_Rate)
SWEUnemployment$Unemployment_Rate <- as.numeric(SWEUnemployment$Unemployment_Rate)
OMXC20$Close.Last <- as.numeric(OMXC20$Close.Last)
OMXS30$Close.Last <- as.numeric(OMXS30$Close.Last)
# Load necessary libraries
library(dplyr)
library(zoo)
# Ensure Close.Last is numeric
OMXC20$Close.Last <- as.numeric(OMXC20$Close.Last)
OMXS30$Close.Last <- as.numeric(OMXS30$Close.Last)
# Remove rows with NA values
OMXC20 <- na.omit(OMXC20)
OMXS30 <- na.omit(OMXS30)
# Merge datasets using full_join to include all dates
merged_data <- full_join(OMXC20_subset, OMXS30_subset, by = "Date")
# Sort by Date
merged_data <- merged_data %>% arrange(Date)
# Forward fill missing values
merged_data$OMXC20_Close <- na.locf(merged_data$OMXC20_Close, na.rm = FALSE)
merged_data$OMXS30_Close <- na.locf(merged_data$OMXS30_Close, na.rm = FALSE)
# Remove any rows where either Close price is still NA
merged_data <- merged_data[!is.na(merged_data$OMXC20_Close) & !is.na(merged_data$OMXS30_Close), ]
# Normalize starting from the first date where both indices have data
merged_data$OMXC20_Normalized <- merged_data$OMXC20_Close / merged_data$OMXC20_Close[1]
merged_data$OMXS30_Normalized <- merged_data$OMXS30_Close / merged_data$OMXS30_Close[1]
# Plot the normalized data
plot(merged_data$Date, merged_data$OMXC20_Normalized, type = "l", col = "blue",
main = "Relative Close.Last Over Time for Scandinavian Indices",
xlab = "Date", ylab = "Relative Close.Last (Start = 1)")
lines(merged_data$Date, merged_data$OMXS30_Normalized, col = "green")
legend("topright", legend = c("OMXC20", "OMXS30"),
col = c("blue", "green"), lty = 1)
library(dplyr)
library(data.table)
library(zoo)
library(lubridate)  # For date manipulation
# Convert stock data to data.table
OMXC20_dt <- as.data.table(OMXC20)
OMXS30_dt <- as.data.table(OMXS30)
# Set keys for efficient joins
setkey(OMXC20_dt, Date)
setkey(OMXS30_dt, Date)
# Assuming SwedenData and DanishData have a 'Date' column in Date format
quarterly_dates_sweden <- data.table(Date = SwedenData$Date)
quarterly_dates_denmark <- data.table(Date = DanishData$Date)
setkey(quarterly_dates_sweden, Date)
setkey(quarterly_dates_denmark, Date)
# For Sweden
quarterly_OMXS30 <- OMXS30_dt[quarterly_dates_sweden, roll = +Inf]
# For Denmark
quarterly_OMXC20 <- OMXC20_dt[quarterly_dates_denmark, roll = +Inf]
# For Sweden
quarterly_OMXS30 <- as.data.frame(quarterly_OMXS30)
# For Denmark
quarterly_OMXC20 <- as.data.frame(quarterly_OMXC20)
View(quarterly_OMXC20)
View(OMXS30)
View(SwedenData)
library(dplyr)
library(data.table)
library(zoo)
library(lubridate)  # For date manipulation
# Convert stock data to data.table
OMXC20_dt <- as.data.table(OMXC20)
OMXS30_dt <- as.data.table(OMXS30)
# Set keys for efficient joins
setkey(OMXC20_dt, Date)
setkey(OMXS30_dt, Date)
# Assuming SwedenData and DanishData have a 'Date' column in Date format
quarterly_dates_sweden <- data.table(Date = SwedenData$Date)
quarterly_dates_denmark <- data.table(Date = DanishData$Date)
setkey(quarterly_dates_sweden, Date)
setkey(quarterly_dates_denmark, Date)
# For Sweden
quarterly_OMXS30 <- OMXS30_dt[quarterly_dates_sweden, roll = +Inf]
# For Denmark
quarterly_OMXC20 <- OMXC20_dt[quarterly_dates_denmark, roll = +Inf]
# For Sweden
quarterly_OMXS30 <- as.data.frame(quarterly_OMXS30)
# For Denmark
quarterly_OMXC20 <- as.data.frame(quarterly_OMXC20)
View(quarterly_OMXC20)
View(quarterly_OMXC20)
# Transform Sweden Data with Differencing
SwedenData <- SWEBNP %>%
left_join(SWEInflation, by = "Date") %>%
left_join(SWEInterestRate, by = "Date") %>%
left_join(SWEUnemployment, by = "Date") %>%
left_join(OMXS30, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)) # Differenced Unemployment Rate
)
library(dplyr)
library(zoo)
# Transform Denmark Data with Differencing
DanishData <- DanishBNP %>%
left_join(DanishInflation, by = "Date") %>%
left_join(DanishInterestReate, by = "Date") %>%
left_join(DanishUnemployment, by = "Date") %>%
left_join(OMXC20, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)) # Differenced Unemployment Rate
)
# Transform Sweden Data with Differencing
SwedenData <- SWEBNP %>%
left_join(SWEInflation, by = "Date") %>%
left_join(SWEInterestRate, by = "Date") %>%
left_join(SWEUnemployment, by = "Date") %>%
left_join(OMXS30, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)) # Differenced Unemployment Rate
)
View(SwedenData)
library(dplyr)
library(zoo)
# Transform Denmark Data with Differencing
DanishData <- DanishBNP %>%
left_join(DanishInflation, by = "Date") %>%
left_join(DanishInterestReate, by = "Date") %>%
left_join(DanishUnemployment, by = "Date") %>%
left_join(quarterly_OMXC20, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)) # Differenced Unemployment Rate
)
# Transform Sweden Data with Differencing
SwedenData <- SWEBNP %>%
left_join(SWEInflation, by = "Date") %>%
left_join(SWEInterestRate, by = "Date") %>%
left_join(SWEUnemployment, by = "Date") %>%
left_join(quarterly_OMXS30, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)) # Differenced Unemployment Rate
)
View(SwedenData)
View(DanishData)
View(OMXC20)
# Load necessary libraries
library(dplyr)
library(readxl)
library(zoo)
DanishBNP <- read_excel("Qdata/gdp-denmark.xlsx", sheet = 1)
colnames(DanishBNP) <- c("Year_K", "BNP")
DanishBNP$Year_K <- gsub("K", " Q", DanishBNP$Year_K)
DanishBNP$Year_K <- as.yearqtr(DanishBNP$Year_K, format = "%Y Q%q")
DanishBNP$Date <- as.Date(DanishBNP$Year_K)  # Convert year-quarter to Date
SWEBNP <- read_excel("Qdata/gdp-sweden.xlsx", sheet = 1)
colnames(SWEBNP) <- c("Year_K", "BNP")
SWEBNP$Year_K <- gsub("K", " Q", SWEBNP$Year_K)
SWEBNP$Year_K <- as.yearqtr(SWEBNP$Year_K, format = "%Y Q%q")
SWEBNP$Date <- as.Date(SWEBNP$Year_K)  # Convert year-quarter to Date
DanishInflation <- read_excel("Qdata/inflation-denmark.xls", sheet = 1)
DanishInterestReate <- read_excel("Qdata/interestrate-denmark.xls", sheet = 1)
DanishUnemployment <- read_excel("Qdata/unemployment-denmark.xls", sheet = 1)
SWEInflation <- read_excel("Qdata/inflation-sweden.xls", sheet = 1)
SWEInterestRate <- read_excel("Qdata/interestrate-sweden.xls", sheet = 1)
SWEUnemployment <- read_excel("Qdata/unemployment-sweden.xls", sheet = 1)
OMXC20 <- read.csv("Qdata/OMX Copenhagen 20 Historical Data.csv")
OMXS30 <- read.csv("Qdata/OMX Stockholm 30 Historical Data.csv")
OMXC20 <- OMXC20[, c("Date", "Price")]
OMXS30 <- OMXS30[, c("Date", "Price")]
colnames(OMXC20) <- c("Date", "Close.Last")
colnames(OMXS30) <- c("Date", "Close.Last")
OMXC20 <- OMXC20 %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
OMXS30 <- OMXS30 %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
# Ensure numeric columns are indeed numeric
DanishInflation$Inflation <- as.numeric(DanishInflation$Inflation)
DanishInterestReate$Interest_Rate <- as.numeric(DanishInterestReate$Interest_Rate)
DanishUnemployment$Unemployment_Rate <- as.numeric(DanishUnemployment$Unemployment_Rate)
SWEInflation$Inflation <- as.numeric(SWEInflation$Inflation)
SWEInterestRate$Interest_Rate <- as.numeric(SWEInterestRate$Interest_Rate)
SWEUnemployment$Unemployment_Rate <- as.numeric(SWEUnemployment$Unemployment_Rate)
OMXC20$Close.Last <- as.numeric(OMXC20$Close.Last)
OMXS30$Close.Last <- as.numeric(OMXS30$Close.Last)
View(OMXC20)
View(OMXS30)
# Load necessary libraries
library(dplyr)
library(readxl)
library(zoo)
DanishBNP <- read_excel("Qdata/gdp-denmark.xlsx", sheet = 1)
colnames(DanishBNP) <- c("Year_K", "BNP")
DanishBNP$Year_K <- gsub("K", " Q", DanishBNP$Year_K)
DanishBNP$Year_K <- as.yearqtr(DanishBNP$Year_K, format = "%Y Q%q")
DanishBNP$Date <- as.Date(DanishBNP$Year_K)  # Convert year-quarter to Date
SWEBNP <- read_excel("Qdata/gdp-sweden.xlsx", sheet = 1)
colnames(SWEBNP) <- c("Year_K", "BNP")
SWEBNP$Year_K <- gsub("K", " Q", SWEBNP$Year_K)
SWEBNP$Year_K <- as.yearqtr(SWEBNP$Year_K, format = "%Y Q%q")
SWEBNP$Date <- as.Date(SWEBNP$Year_K)  # Convert year-quarter to Date
DanishInflation <- read_excel("Qdata/inflation-denmark.xls", sheet = 1)
DanishInterestReate <- read_excel("Qdata/interestrate-denmark.xls", sheet = 1)
DanishUnemployment <- read_excel("Qdata/unemployment-denmark.xls", sheet = 1)
SWEInflation <- read_excel("Qdata/inflation-sweden.xls", sheet = 1)
SWEInterestRate <- read_excel("Qdata/interestrate-sweden.xls", sheet = 1)
SWEUnemployment <- read_excel("Qdata/unemployment-sweden.xls", sheet = 1)
OMXC20 <- read.csv("Qdata/OMX Copenhagen 20 Historical Data.csv")
OMXS30 <- read.csv("Qdata/OMX Stockholm 30 Historical Data.csv")
OMXC20 <- OMXC20[, c("Date", "Price")]
OMXS30 <- OMXS30[, c("Date", "Price")]
colnames(OMXC20) <- c("Date", "Close.Last")
colnames(OMXS30) <- c("Date", "Close.Last")
OMXC20 <- OMXC20 %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
OMXS30 <- OMXS30 %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y"))
# Ensure numeric columns are indeed numeric
DanishInflation$Inflation <- as.numeric(DanishInflation$Inflation)
DanishInterestReate$Interest_Rate <- as.numeric(DanishInterestReate$Interest_Rate)
DanishUnemployment$Unemployment_Rate <- as.numeric(DanishUnemployment$Unemployment_Rate)
SWEInflation$Inflation <- as.numeric(SWEInflation$Inflation)
SWEInterestRate$Interest_Rate <- as.numeric(SWEInterestRate$Interest_Rate)
SWEUnemployment$Unemployment_Rate <- as.numeric(SWEUnemployment$Unemployment_Rate)
OMXC20$Close.Last <- as.numeric(OMXC20$Close.Last)
OMXS30$Close.Last <- as.numeric(OMXS30$Close.Last)
View(OMXS30)
# Load necessary libraries
library(dplyr)
library(zoo)
# Ensure Close.Last is numeric
OMXC20$Close.Last <- as.numeric(OMXC20$Close.Last)
OMXS30$Close.Last <- as.numeric(OMXS30$Close.Last)
# Remove rows with NA values
OMXC20 <- na.omit(OMXC20)
OMXS30 <- na.omit(OMXS30)
# Merge datasets using full_join to include all dates
merged_data <- full_join(OMXC20_subset, OMXS30_subset, by = "Date")
# Sort by Date
merged_data <- merged_data %>% arrange(Date)
# Forward fill missing values
merged_data$OMXC20_Close <- na.locf(merged_data$OMXC20_Close, na.rm = FALSE)
merged_data$OMXS30_Close <- na.locf(merged_data$OMXS30_Close, na.rm = FALSE)
# Remove any rows where either Close price is still NA
merged_data <- merged_data[!is.na(merged_data$OMXC20_Close) & !is.na(merged_data$OMXS30_Close), ]
# Normalize starting from the first date where both indices have data
merged_data$OMXC20_Normalized <- merged_data$OMXC20_Close / merged_data$OMXC20_Close[1]
merged_data$OMXS30_Normalized <- merged_data$OMXS30_Close / merged_data$OMXS30_Close[1]
# Plot the normalized data
plot(merged_data$Date, merged_data$OMXC20_Normalized, type = "l", col = "blue",
main = "Relative Close.Last Over Time for Scandinavian Indices",
xlab = "Date", ylab = "Relative Close.Last (Start = 1)")
lines(merged_data$Date, merged_data$OMXS30_Normalized, col = "green")
legend("topright", legend = c("OMXC20", "OMXS30"),
col = c("blue", "green"), lty = 1)
library(dplyr)
library(zoo)
# Transform Denmark Data with Differencing
DanishData <- DanishBNP %>%
left_join(DanishInflation, by = "Date") %>%
left_join(DanishInterestReate, by = "Date") %>%
left_join(DanishUnemployment, by = "Date") %>%
left_join(quarterly_OMXC20, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)) # Differenced Unemployment Rate
)
# Transform Sweden Data with Differencing
SwedenData <- SWEBNP %>%
left_join(SWEInflation, by = "Date") %>%
left_join(SWEInterestRate, by = "Date") %>%
left_join(SWEUnemployment, by = "Date") %>%
left_join(quarterly_OMXS30, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)) # Differenced Unemployment Rate
)
View(SwedenData)
library(dplyr)
library(data.table)
library(zoo)
library(lubridate)  # For date manipulation
# Convert stock data to data.table
OMXC20_dt <- as.data.table(OMXC20)
OMXS30_dt <- as.data.table(OMXS30)
# Set keys for efficient joins
setkey(OMXC20_dt, Date)
setkey(OMXS30_dt, Date)
# Assuming SwedenData and DanishData have a 'Date' column in Date format
quarterly_dates_sweden <- data.table(Date = SwedenData$Date)
quarterly_dates_denmark <- data.table(Date = DanishData$Date)
setkey(quarterly_dates_sweden, Date)
setkey(quarterly_dates_denmark, Date)
# For Sweden
quarterly_OMXS30 <- OMXS30_dt[quarterly_dates_sweden, roll = +Inf]
# For Denmark
quarterly_OMXC20 <- OMXC20_dt[quarterly_dates_denmark, roll = +Inf]
# For Sweden
quarterly_OMXS30 <- as.data.frame(quarterly_OMXS30)
# For Denmark
quarterly_OMXC20 <- as.data.frame(quarterly_OMXC20)
library(dplyr)
library(zoo)
# Transform Denmark Data with Differencing
DanishData <- DanishBNP %>%
left_join(DanishInflation, by = "Date") %>%
left_join(DanishInterestReate, by = "Date") %>%
left_join(DanishUnemployment, by = "Date") %>%
left_join(quarterly_OMXC20, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)) # Differenced Unemployment Rate
)
# Transform Sweden Data with Differencing
SwedenData <- SWEBNP %>%
left_join(SWEInflation, by = "Date") %>%
left_join(SWEInterestRate, by = "Date") %>%
left_join(SWEUnemployment, by = "Date") %>%
left_join(quarterly_OMXS30, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)) # Differenced Unemployment Rate
)
View(SwedenData)
View(DanishData)
# Load required libraries
library(vars)
library(urca)
library(dplyr)
library(zoo)
# Remove NA values and select variables for VAR
danish_var_data <- na.omit(danish_aligned[, c("BNP", "Inflation", "InterestRate", "Unemployment")])
swedish_var_data <- na.omit(swedish_aligned[, c("BNP", "Inflation", "InterestRate", "Unemployment")])
# Continue with VAR analysis as before...
# Determine optimal lag order
danish_var_select <- VARselect(danish_var_data, lag.max = 4, type = "const")
swedish_var_select <- VARselect(swedish_var_data, lag.max = 4, type = "const")
library(dplyr)
library(zoo)
# Transform Denmark Data with Differencing
DanishData <- DanishBNP %>%
left_join(DanishInflation, by = "Date") %>%
left_join(DanishInterestReate, by = "Date") %>%
left_join(DanishUnemployment, by = "Date") %>%
left_join(OMXC20, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)) # Differenced Unemployment Rate
)
# Transform Sweden Data with Differencing
SwedenData <- SWEBNP %>%
left_join(SWEInflation, by = "Date") %>%
left_join(SWEInterestRate, by = "Date") %>%
left_join(SWEUnemployment, by = "Date") %>%
left_join(OMXS30, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)) # Differenced Unemployment Rate
)
View(SwedenData)
View(DanishData)
library(dplyr)
library(zoo)
# Transform Denmark Data with Differencing
DanishData <- DanishBNP %>%
left_join(DanishInflation, by = "Date") %>%
left_join(DanishInterestReate, by = "Date") %>%
left_join(DanishUnemployment, by = "Date") %>%
left_join(OMXC20, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)) # Differenced Unemployment Rate
)
# Transform Sweden Data with Differencing
SwedenData <- SWEBNP %>%
left_join(SWEInflation, by = "Date") %>%
left_join(SWEInterestRate, by = "Date") %>%
left_join(SWEUnemployment, by = "Date") %>%
left_join(OMXS30, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)) # Differenced Unemployment Rate
)
# Load necessary libraries
library(dplyr)
library(zoo)
# Ensure Close.Last is numeric
OMXC20$Close.Last <- as.numeric(OMXC20$Close.Last)
OMXS30$Close.Last <- as.numeric(OMXS30$Close.Last)
# Remove rows with NA values
OMXC20 <- na.omit(OMXC20)
OMXS30 <- na.omit(OMXS30)
# Merge datasets using full_join to include all dates
merged_data <- full_join(OMXC20_subset, OMXS30_subset, by = "Date")
# Sort by Date
merged_data <- merged_data %>% arrange(Date)
# Forward fill missing values
merged_data$OMXC20_Close <- na.locf(merged_data$OMXC20_Close, na.rm = FALSE)
merged_data$OMXS30_Close <- na.locf(merged_data$OMXS30_Close, na.rm = FALSE)
# Remove any rows where either Close price is still NA
merged_data <- merged_data[!is.na(merged_data$OMXC20_Close) & !is.na(merged_data$OMXS30_Close), ]
# Normalize starting from the first date where both indices have data
merged_data$OMXC20_Normalized <- merged_data$OMXC20_Close / merged_data$OMXC20_Close[1]
merged_data$OMXS30_Normalized <- merged_data$OMXS30_Close / merged_data$OMXS30_Close[1]
# Plot the normalized data
plot(merged_data$Date, merged_data$OMXC20_Normalized, type = "l", col = "blue",
main = "Relative Close.Last Over Time for Scandinavian Indices",
xlab = "Date", ylab = "Relative Close.Last (Start = 1)")
lines(merged_data$Date, merged_data$OMXS30_Normalized, col = "green")
legend("topright", legend = c("OMXC20", "OMXS30"),
col = c("blue", "green"), lty = 1)
# Load necessary libraries
library(dplyr)
library(zoo)
# Remove rows with NA values
OMXC20 <- na.omit(OMXC20)
OMXS30 <- na.omit(OMXS30)
# Merge datasets using full_join to include all dates
merged_data <- full_join(OMXC20_subset, OMXS30_subset, by = "Date")
# Sort by Date
merged_data <- merged_data %>% arrange(Date)
# Forward fill missing values
merged_data$OMXC20_Close <- na.locf(merged_data$OMXC20_Close, na.rm = FALSE)
merged_data$OMXS30_Close <- na.locf(merged_data$OMXS30_Close, na.rm = FALSE)
# Remove any rows where either Close price is still NA
merged_data <- merged_data[!is.na(merged_data$OMXC20_Close) & !is.na(merged_data$OMXS30_Close), ]
# Normalize starting from the first date where both indices have data
merged_data$OMXC20_Normalized <- merged_data$OMXC20_Close / merged_data$OMXC20_Close[1]
merged_data$OMXS30_Normalized <- merged_data$OMXS30_Close / merged_data$OMXS30_Close[1]
# Plot the normalized data
plot(merged_data$Date, merged_data$OMXC20_Normalized, type = "l", col = "blue",
main = "Relative Close.Last Over Time for Scandinavian Indices",
xlab = "Date", ylab = "Relative Close.Last (Start = 1)")
lines(merged_data$Date, merged_data$OMXS30_Normalized, col = "green")
legend("topright", legend = c("OMXC20", "OMXS30"),
col = c("blue", "green"), lty = 1)
