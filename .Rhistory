p1_dan, p2_dan, p3_dan, p4_dan, ncol = 2,
top = textGrob(
"Denmark Stationary Macro Economic Variables (Differenced)",
gp = gpar(fontsize = 14, fontface = "bold")
)
)
library(ggplot2)
library(gridExtra)
library(grid)
# Create a custom theme for all plots
custom_theme <- theme_minimal() +
theme(
plot.title = element_text(size = 12),
axis.title = element_text(size = 6),
axis.text = element_text(size = 6)
)
# Swedish Variables Plot with Adjusted Title Font Sizes
p1_swe <- ggplot(SwedenData, aes(x = Date, y = BNP_Diff)) +
geom_line(color = "blue") +
labs(
title = "GDP",
x = "Year",
y = "Differenced GDP"
) +
custom_theme
p2_swe <- ggplot(SwedenData, aes(x = Date, y = Inflation_Diff)) +
geom_line(color = "red") +
labs(
title = "Inflation",
x = "Year",
y = "Differenced Inflation Rate (%)"
) +
custom_theme
p3_swe <- ggplot(SwedenData, aes(x = Date, y = Unemployment_Diff)) +
geom_line(color = "green") +
labs(
title = "Unemployment Rate",
x = "Year",
y = "Differenced Unemployment Rate (%)"
) +
custom_theme
p4_swe <- ggplot(SwedenData, aes(x = Date, y = InterestRate_Diff)) +
geom_line(color = "purple") +
labs(
title = "Interest Rate",
x = "Year",
y = "Differenced Interest Rate (%)"
) +
custom_theme
# Arrange Swedish Plots with Main Title
grid.arrange(
p1_swe, p2_swe, p3_swe, p4_swe, ncol = 2,
top = textGrob(
"Sweden Stationary Macro Economic Variables (Differenced)",
gp = gpar(fontsize = 14, fontface = "bold")
)
)
# Danish Variables Plot with Adjusted Title Font Sizes
p1_dan <- ggplot(DenmarkData, aes(x = Date, y = BNP_Diff)) +
geom_line(color = "blue") +
labs(
title = "GDP",
x = "Year",
y = "Differenced GDP"
) +
custom_theme
p2_dan <- ggplot(DenmarkData, aes(x = Date, y = Inflation_Diff)) +
geom_line(color = "red") +
labs(
title = "Inflation",
x = "Year",
y = "Differenced Inflation Rate (%)"
) +
custom_theme
p3_dan <- ggplot(DenmarkData, aes(x = Date, y = Unemployment_Diff)) +
geom_line(color = "green") +
labs(
title = "Unemployment Rate",
x = "Year",
y = "Differenced Unemployment Rate (%)"
) +
custom_theme
p4_dan <- ggplot(DenmarkData, aes(x = Date, y = InterestRate_Diff)) +
geom_line(color = "purple") +
labs(
title = "Interest Rate",
x = "Year",
y = "Differenced Interest Rate (%)"
) +
custom_theme
# Arrange Danish Plots with Main Title
grid.arrange(
p1_dan, p2_dan, p3_dan, p4_dan, ncol = 2,
top = textGrob(
"Denmark Stationary Macro Economic Variables (Differenced)",
gp = gpar(fontsize = 14, fontface = "bold")
)
)
library(forecast)
acf(diff_OMXS30, main = "ACF for Differenced OMXS30")
pacf(diff_OMXS30, main = "PACF for Differenced OMXS30")
acf(diff_OMXC20, main = "ACF for Differenced OMXC20")
pacf(diff_OMXC20, main = "PACF for Differenced OMXC20")
#for danish GDP
acf(diff_DBNP, main = "ACF for Differenced Danish GDP (BNP)")
pacf(diff_DBNP, main = "PACF for Differenced Danish GDP (BNP)")
#for danish inflation
acf(diff_Dinflation, main = "ACF for Differenced Danish Inflation")
pacf(diff_Dinflation, main = "PACF for Differenced Danish Inflation")
#for danish interest rate
acf(diff_Dinterest, main = "ACF for Differenced Danish Interest Rate")
pacf(diff_Dinterest, main = "PACF for Differenced Danish Interest Rate")
#for danish unemployment
acf(diff_Dunemployment, main = "ACF for Differenced Danish Unemployment Rate")
pacf(diff_Dunemployment, main = "PACF for Differenced Danish Unemployment Rate")
#for swedish GDP
acf(diff_SBNP, main = "ACF for Differenced Swedish GDP (BNP)")
pacf(diff_SBNP, main = "PACF for Differenced Swedish GDP (BNP)")
#for swedish inflation
acf(diff_Sinterest, main = "ACF for Differenced Swedish Interest Rate")
pacf(diff_Sinterest, main = "PACF for Differenced Swedish Interest Rate")
#for swedish interest rate
acf(diff_Sinterest, main = "ACF for Differenced Swedish Interest Rate")
pacf(diff_Sinterest, main = "PACF for Differenced Swedish Interest Rate")
#for swedish unemployment
acf(diff_Sunemployment, main = "ACF for Differenced Swedish Unemployment Rate")
pacf(diff_Sunemployment, main = "PACF for Differenced Swedish Unemployment Rate")
library(dplyr)
library(zoo)
# Transform Denmark Data with Differencing
DenmarkData <- DanishBNP %>%
left_join(DanishInflation, by = "Date") %>%
left_join(DanishInterestReate, by = "Date") %>%
left_join(DanishUnemployment, by = "Date") %>%
left_join(OMXC20, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)), # Differenced Unemployment Rate
OMXC20_Diff = c(NA, diff(Close.Last)),
Log_Inflation = log(Inflation),
Log_BNP = log(BNP),                        # Log-transformed GDP
Log_OMXC20 = log(Close.Last),              # Log-transformed OMXC20
Log_BNP_Diff = c(NA, diff(Log_BNP)),           # Differenced Log GDP
Log_Inflation_Diff = c(NA, diff(Log_Inflation))      # Differenced Log inflation
Log_OMXC20_Diff = c(NA, diff(Log_OMXC20))      # Differenced Log OMXC20
library(dplyr)
library(zoo)
# Transform Denmark Data with Differencing
DenmarkData <- DanishBNP %>%
left_join(DanishInflation, by = "Date") %>%
left_join(DanishInterestReate, by = "Date") %>%
left_join(DanishUnemployment, by = "Date") %>%
left_join(OMXC20, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)), # Differenced Unemployment Rate
OMXC20_Diff = c(NA, diff(Close.Last)),
Log_Inflation = log(Inflation),
Log_BNP = log(BNP),                        # Log-transformed GDP
Log_OMXC20 = log(Close.Last),              # Log-transformed OMXC20
Log_BNP_Diff = c(NA, diff(Log_BNP)),           # Differenced Log GDP
Log_Inflation_Diff = c(NA, diff(Log_Inflation)),      # Differenced Log inflation
Log_OMXC20_Diff = c(NA, diff(Log_OMXC20))      # Differenced Log OMXC20
)
# Transform Sweden Data with Differencing
SwedenData <- SWEBNP %>%
left_join(SWEInflation, by = "Date") %>%
left_join(SWEInterestRate, by = "Date") %>%
left_join(SWEUnemployment, by = "Date") %>%
left_join(OMXS30, by = "Date") %>%
mutate(
Date = as.Date(as.yearqtr(Date, format = "%Y Q%q")),
BNP_Diff = c(NA, diff(BNP)),                # Differenced GDP
Inflation_Diff = c(NA, diff(Inflation)),    # Differenced Inflation
InterestRate_Diff = c(NA, diff(Interest_Rate)), # Differenced Interest Rate
Unemployment_Diff = c(NA, diff(Unemployment_Rate)), # Differenced Unemployment Rate
OMXS30_Diff = c(NA, diff(Close.Last)),
Log_BNP = log(BNP),
Log_BNP_Diff = c(NA, diff(Log_BNP))
)
# Denmark's Log-Differenced GDP
p1_dk <- ggplot(DenmarkData, aes(x = Date, y = Log_BNP_Diff)) +
geom_line(color = "blue") +
labs(title = "Log-Differenced GDP", x = "Year", y = "Log-Diff GDP") +
custom_theme
# Denmark's Log-Differenced Inflation
p2_dk <- ggplot(DenmarkData, aes(x = Date, y = Log_Inflation_Diff)) +
geom_line(color = "red") +
labs(title = "Log-Differenced Inflation", x = "Year", y = "Log-Diff Inflation Rate") +
custom_theme
# Denmark's Log-Differenced OMXC20
p3_dk <- ggplot(DenmarkData, aes(x = Date, y = Log_OMXC20_Diff)) +
geom_line(color = "green") +
labs(title = "Log-Differenced OMXC20", x = "Year", y = "Log-Diff OMXC20") +
custom_theme
# Denmark's Log-Differenced GDP
p1_dk <- ggplot(DenmarkData, aes(x = Date, y = Log_BNP_Diff)) +
geom_line(color = "blue") +
labs(title = "Log-Differenced GDP", x = "Year", y = "Log-Diff GDP") +
custom_theme
# Denmark's Log-Differenced Inflation
p2_dk <- ggplot(DenmarkData, aes(x = Date, y = Log_Inflation_Diff)) +
geom_line(color = "red") +
labs(title = "Log-Differenced Inflation", x = "Year", y = "Log-Diff Inflation Rate") +
custom_theme
# Denmark's Log-Differenced OMXC20
p3_dk <- ggplot(DenmarkData, aes(x = Date, y = Log_OMXC20_Diff)) +
geom_line(color = "green") +
labs(title = "Log-Differenced OMXC20", x = "Year", y = "Log-Diff OMXC20") +
custom_theme
# Sweden's Log-Differenced GDP
p1_se <- ggplot(SwedenData, aes(x = Date, y = Log_BNP_Diff)) +
geom_line(color = "blue") +
labs(title = "Log-Differenced GDP", x = "Year", y = "Log-Diff GDP") +
custom_theme
# Arrange Denmark's plots
grid.arrange(p1_dk, p2_dk, p3_dk, ncol = 1,
top = textGrob(
"Denmark's Log-Differenced Variables",
gp = gpar(fontsize = 14, fontface = "bold")
)
)
# Arrange Sweden's plots
grid.arrange(p1_se, ncol = 1,
top = textGrob(
"Sweden's Log-Differenced Variables",
gp = gpar(fontsize = 14, fontface = "bold")
)
)
# Denmark's Log-Differenced GDP
p1_dk <- ggplot(DenmarkData, aes(x = Date, y = Log_BNP_Diff)) +
geom_line(color = "blue") +
labs(title = "Log-Differenced GDP", x = "Year", y = "Log-Diff GDP") +
custom_theme
# Denmark's Log-Differenced Inflation
p2_dk <- ggplot(DenmarkData, aes(x = Date, y = Log_Inflation_Diff)) +
geom_line(color = "red") +
labs(title = "Log-Differenced Inflation", x = "Year", y = "Log-Diff Inflation Rate") +
custom_theme
# Denmark's Log-Differenced OMXC20
p3_dk <- ggplot(DenmarkData, aes(x = Date, y = Log_OMXC20_Diff)) +
geom_line(color = "green") +
labs(title = "Log-Differenced OMXC20", x = "Year", y = "Log-Diff OMXC20") +
custom_theme
# Sweden's Log-Differenced GDP
p1_se <- ggplot(SwedenData, aes(x = Date, y = Log_BNP_Diff)) +
geom_line(color = "blue") +
labs(title = "Log-Differenced GDP", x = "Year", y = "Log-Diff GDP") +
custom_theme
# Arrange the plots side by side
grid.arrange(
p1_dk, p2_dk, p3_dk, p1_se,ncol = 2,
widths = c(1, 1),
top = textGrob(
"Differenced OMXS30 and OMXC20 Indices",
gp = gpar(fontsize = 14, fontface = "bold")
)
)
# Denmark's Log-Differenced GDP
p1_dk <- ggplot(DenmarkData, aes(x = Date, y = Log_BNP_Diff)) +
geom_line(color = "blue") +
labs(title = "Log-Differenced GDP Denmark", x = "Year", y = "Log-Diff GDP") +
custom_theme
# Denmark's Log-Differenced Inflation
p2_dk <- ggplot(DenmarkData, aes(x = Date, y = Log_Inflation_Diff)) +
geom_line(color = "red") +
labs(title = "Log-Differenced Inflation Denmark", x = "Year", y = "Log-Diff Inflation Rate") +
custom_theme
# Denmark's Log-Differenced OMXC20
p3_dk <- ggplot(DenmarkData, aes(x = Date, y = Log_OMXC20_Diff)) +
geom_line(color = "green") +
labs(title = "Log-Differenced OMXC20", x = "Year", y = "Log-Diff OMXC20") +
custom_theme
# Sweden's Log-Differenced GDP
p1_se <- ggplot(SwedenData, aes(x = Date, y = Log_BNP_Diff)) +
geom_line(color = "blue") +
labs(title = "Log-Differenced GDP Sweden", x = "Year", y = "Log-Diff GDP") +
custom_theme
# Arrange the plots side by side
grid.arrange(
p1_dk, p2_dk, p3_dk, p1_se,ncol = 2,
widths = c(1, 1),
top = textGrob(
"Differenced OMXS30 and OMXC20 Indices",
gp = gpar(fontsize = 14, fontface = "bold")
)
)
library(forecast)
SwedenData$OMXS30_Diff
acf(SwedenData$OMXS30_Diff, main = "ACF for Differenced OMXS30")
library(forecast)
acf(SwedenData$OMXS30_Diff, main = "ACF for Differenced OMXS30")
library(forecast)
DenmarkData <- DenmarkData[complete.cases(DenmarkData), ] # Optionally, apply to the entire dataset
SwedenData <- SwedenData[complete.cases(SwedenData), ] # Optionally, apply to the entire dataset
acf(SwedenData$OMXS30_Diff, main = "ACF for Differenced OMXS30")
pacf(SwedenData$OMXS30_Diff, main = "PACF for Differenced OMXS30")
acf(DenmarkData$Log_OMXC20_Diff, main = "ACF for Log Differenced OMXC20")
pacf(DenmarkData$Log_OMXC20_Diff, main = "PACF for Log Differenced OMXC20")
#for danish GDP
acf(DenmarkData$Log_BNP_Diff, main = "ACF for Log Differenced Danish GDP (BNP)")
pacf(DenmarkData$Log_BNP_Diff, main = "PACF for Log Differenced Danish GDP (BNP)")
#for danish inflation
acf(DenmarkData$Log_Inflation_Diff, main = "ACF for Differenced Danish Inflation")
pacf(DenmarkData$Log_Inflation_Diff, main = "PACF for Differenced Danish Inflation")
#for danish interest rate
acf(DenmarkData$InterestRate_Diff, main = "ACF for Differenced Danish Interest Rate")
pacf(DenmarkData$InterestRate_Diff, main = "PACF for Differenced Danish Interest Rate")
#for danish unemployment
acf(DenmarkData$Unemployment_Diff, main = "ACF for Differenced Danish Unemployment Rate")
pacf(DenmarkData$Unemployment_Diff, main = "PACF for Differenced Danish Unemployment Rate")
#for swedish GDP
acf(SwedenData$Log_BNP_Diff, main = "ACF for Differenced Swedish GDP (BNP)")
pacf(SwedenData$Log_BNP_Diff, main = "PACF for Differenced Swedish GDP (BNP)")
#for swedish inflation
acf(SwedenData$Inflation_Diff, main = "ACF for Differenced Swedish Interest Rate")
pacf(SwedenData$Inflation_Diff, main = "PACF for Differenced Swedish Interest Rate")
#for swedish interest rate
acf(SwedenData$InterestRate_Diff, main = "ACF for Differenced Swedish Interest Rate")
pacf(SwedenData$InterestRate_Diff, main = "PACF for Differenced Swedish Interest Rate")
#for swedish unemployment
acf(SwedenData$Unemployment_Diff, main = "ACF for Differenced Swedish Unemployment Rate")
pacf(SwedenData$Unemployment_Diff, main = "PACF for Differenced Swedish Unemployment Rate")
arima_OMXC20 <- auto.arima(DenmarkData$Log_OMXC20_Diff)
summary(arima_OMXC20)
arima_OMXC20 <- auto.arima(DenmarkData$Log_OMXC20)
summary(arima_OMXC20)
fit_arima_OMXC20 <- arima(DenmarkData$Log_OMXC20, order = c(4,1,2))
summary(fit_arima_OMXC20)
arima_DBNP <- auto.arima(DenmarkData$Log_BNP)
summary(arima_DBNP)
arima_Dinflation <- auto.arima(DenmarkData$Log_Inflation)
summary(arima_Dinflation)
arima_Dinterest <- arima(DenmarkData$Interest_Rate) ## WHAT?
summary(arima_Dinterest)
arima_SBNP <- auto.arima(SwedenData$Log_BNP)
summary(arima_SBNP)
library(forecast)
#Automatic ARIMA Model Selection and fit the ARIMA models
arima_OMXC20 <- auto.arima(DenmarkData$Log_OMXC20)
summary(arima_OMXC20)
fit_arima_OMXC20 <- arima(DenmarkData$Log_OMXC20, order = c(4,1,2))
summary(fit_arima_OMXC20)
arima_OMXS30 <- auto.arima(SwedenData$Close.Last)
summary(arima_OMXS30)
fit_arima_OMXS30 <- arima(SwedenData$Close.Last, order = c(0,1,1))
summary(fit_arima_OMXS30)
#danish gdp
arima_DBNP <- auto.arima(DenmarkData$Log_BNP)
summary(arima_DBNP)
fit_arima_DBNP <- arima(DenmarkData$BNP, order = c(1, 1, 2))
summary(fit_arima_DBNP)
#danish inflation
arima_Dinflation <- auto.arima(DenmarkData$Log_Inflation)
summary(arima_Dinflation)
fit_arima_Dinflation <- arima(DenmarkData$Inflation, order = c(0, 1, 0))
summary(fit_arima_Dinflation)
#danish interest rate
arima_Dinterest <- arima(DenmarkData$Interest_Rate) ## WHAT?
summary(arima_Dinterest)
fit_arima_Dinterest <- arima(DenmarkData$Interest_Rate, order = c(0, 1, 0))
summary(fit_arima_Dinterest)
#danish unemployment
arima_Dunemployment <- auto.arima(DenmarkData$Unemployment_Rate)
summary(arima_Dunemployment) #ARIMA(2,0,1) with non-zero mean
fit_arima_Dunemployment <- arima(DenmarkData$Unemployment_Rate, order = c(2, 0, 1))
summary(fit_arima_Dunemployment)
#swedish GDP
arima_SBNP <- auto.arima(SwedenData$Log_BNP)
summary(arima_SBNP)
fit_arima_SBNP <- arima(SwedenData$BNP, order = c(3, 1, 4))
library(forecast)
#Automatic ARIMA Model Selection and fit the ARIMA models
arima_OMXC20 <- auto.arima(DenmarkData$Log_OMXC20)
summary(arima_OMXC20)
fit_arima_OMXC20 <- arima(DenmarkData$Log_OMXC20, order = c(4,1,2))
summary(fit_arima_OMXC20)
arima_OMXS30 <- auto.arima(SwedenData$Close.Last)
summary(arima_OMXS30)
fit_arima_OMXS30 <- arima(SwedenData$Close.Last, order = c(0,1,1))
summary(fit_arima_OMXS30)
#danish gdp
arima_DBNP <- auto.arima(DenmarkData$Log_BNP)
summary(arima_DBNP)
fit_arima_DBNP <- arima(DenmarkData$Log_BNP, order = c(1, 1, 2))
summary(fit_arima_DBNP)
#danish inflation
arima_Dinflation <- auto.arima(DenmarkData$Log_Inflation)
summary(arima_Dinflation)
fit_arima_Dinflation <- arima(DenmarkData$Log_Inflation, order = c(0, 1, 0))
summary(fit_arima_Dinflation)
#danish interest rate
arima_Dinterest <- arima(DenmarkData$Interest_Rate) ## WHAT?
summary(arima_Dinterest)
fit_arima_Dinterest <- arima(DenmarkData$Interest_Rate, order = c(0, 1, 0))
summary(fit_arima_Dinterest)
#danish unemployment
arima_Dunemployment <- auto.arima(DenmarkData$Unemployment_Rate)
summary(arima_Dunemployment) #ARIMA(2,0,1) with non-zero mean
fit_arima_Dunemployment <- arima(DenmarkData$Unemployment_Rate, order = c(2, 0, 1))
summary(fit_arima_Dunemployment)
#swedish GDP
arima_SBNP <- auto.arima(SwedenData$Log_BNP)
summary(arima_SBNP)
fit_arima_SBNP <- arima(SwedenData$Log_BNP, order = c(3, 1, 4))
summary(fit_arima_SBNP)
#Swedish inflation
arima_Sinflation <- auto.arima(SwedenData$Inflation)
summary(arima_Sinflation) #ARIMA(1,0,4) with non-zero mean
fit_arima_Sinflation <- arima(SwedenData$Inflation, order = c(1, 0, 4))
summary(fit_arima_Sinflation)
#swedish interest rate
arima_Sinterest <- auto.arima(SwedenData$Interest_Rate, seasonal = TRUE)
summary(arima_Sinterest)
fit_arima_Sinterest <- arima(SwedenData$Interest_Rate, order = c(1, 1, 0))
summary(fit_arima_Sinterest)
#swedish unemployment
arima_Sunemployment <- auto.arima(SwedenData$Unemployment_Rate)
summary(arima_Sunemployment)
fit_arima_Sunemployment <- arima(SwedenData$Unemployment_Rate, order = c(3, 1, 0))
summary(fit_arima_Sunemployment)
#Diagnostic checking
#for the danish
checkresiduals(fit_arima_DBNP)
Box.test(residuals(fit_arima_DBNP), lag = 10, type = "Ljung-Box")
checkresiduals(fit_arima_Dinflation)
Box.test(residuals(fit_arima_Dinflation), lag = 10, type = "Ljung-Box")
checkresiduals(fit_arima_Dinterest)
Box.test(residuals(fit_arima_Dinterest), lag = 10, type = "Ljung-Box")
checkresiduals(fit_arima_Dunemployment)
Box.test(residuals(fit_arima_Dunemployment), lag = 10, type = "Ljung-Box")
#for the swedish
checkresiduals(fit_arima_SBNP)
Box.test(residuals(fit_arima_SBNP), lag = 10, type = "Ljung-Box")
checkresiduals(fit_arima_Sinflation)
Box.test(residuals(fit_arima_Sinflation), lag = 10, type = "Ljung-Box")
checkresiduals(fit_arima_Sinterest)
Box.test(residuals(fit_arima_Sinterest), lag = 10, type = "Ljung-Box")
checkresiduals(fit_arima_Sunemployment)
Box.test(residuals(fit_arima_Sunemployment), lag = 10, type = "Ljung-Box")
#for the danish
forecast_OMXC20 <- forecast(fit_arima_OMXC20, h = 12)
plot(forecast_OMXC20)
forecast_OMXS30 <- forecast(fit_arima_OMXS30, h = 12)
plot(forecast_OMXS30)
#for the danish
forecast_DBNP <- forecast(fit_arima_DBNP, h = 12)
plot(forecast_DBNP)
forecast_Dinflation <- forecast(fit_arima_Dinflation, h = 12)
plot(forecast_Dinflation)
forecast_Dinterest <- forecast(fit_arima_Dinterest, h = 12)
plot(forecast_Dinterest)
forecast_Dunemployment <- forecast(fit_arima_Dunemployment, h = 12)
plot(forecast_Dunemployment)
#for the swedish
forecast_SBNP <- forecast(fit_arima_SBNP, h = 12)
plot(forecast_SBNP)
forecast_Sinflation <- forecast(fit_arima_Sinflation, h = 12)
plot(forecast_Sinflation)
forecast_Sinterest <- forecast(fit_arima_Sinterest, h = 12)
plot(forecast_Sinterest)
forecast_Sunemployment <- forecast(fit_arima_Sunemployment, h = 12)
plot(forecast_Sunemployment)
# Load package
library(vars)
# Prepare Denmark data
DenmarkVAR <- cbind(
DenmarkData$Log_BNP_Diff,
DenmarkData$Log_Inflation_Diff,
DenmarkData$InterestRate_Diff,
DenmarkData$Unemployment_Diff,
DenmarkData$Log_OMXC20_Diff
)
# Remove NA rows
DenmarkVAR <- na.omit(DenmarkVAR)
# Add column names
colnames(DenmarkVAR) <- c("BNP_Diff", "Inflation_Diff", "InterestRate_Diff",
"Unemployment_Diff", "OMXC20_Diff")
# Prepare Sweden data
SwedenVAR <- cbind(
SwedenData$Log_BNP_Diff,
SwedenData$Inflation_Diff,
SwedenData$InterestRate_Diff,
SwedenData$Unemployment_Diff,
SwedenData$OMXS30_Diff
)
# Remove NA rows
SwedenVAR <- na.omit(SwedenVAR)
# Add column names
colnames(SwedenVAR) <- c("BNP_Diff", "Inflation_Diff", "InterestRate_Diff",
"Unemployment_Diff", "OMXS30_Diff")
# VAR analysis
denmark_lag <- VARselect(DenmarkVAR, lag.max = 8, type = "const")
sweden_lag <- VARselect(SwedenVAR, lag.max = 8, type = "const")
# Fit models
denmark_var <- VAR(DenmarkVAR, p = 3, type = "const")
sweden_var <- VAR(SwedenVAR, p = 4, type = "const")
# Diagnostics
denmark_serial <- serial.test(denmark_var)
sweden_serial <- serial.test(sweden_var)
# IRFs
denmark_irf <- irf(denmark_var, n.ahead = 8)
sweden_irf <- irf(sweden_var, n.ahead = 8)
# Plot IRFs
par(mfrow=c(2,1))
plot(denmark_irf)
