knitr::opts_chunk$set(echo = TRUE)
# Load necessary libraries
library(dplyr)
# Read CSV files
OMXC20 <- read.csv("Data/OMXC20.csv")
OMXS30 <- read.csv("Data/OMXS30.csv")
# Convert Date columns to Date format
OMXC20$Date <- as.Date(OMXC20$Date, format = "%m/%d/%Y")
OMXS30$Date <- as.Date(OMXS30$Date, format = "%m/%d/%Y")
# Ensure Close.Last is numeric
OMXC20$Close.Last <- as.numeric(OMXC20$Close.Last)
OMXS30$Close.Last <- as.numeric(OMXS30$Close.Last)
# Remove rows with NA values
OMXC20 <- na.omit(OMXC20)
OMXS30 <- na.omit(OMXS30)
# Find common dates
common_dates <- intersect(OMXC20$Date, OMXS30$Date)
# Subset datasets to common dates
OMXC20_common <- OMXC20[OMXC20$Date %in% common_dates, ]
OMXS30_common <- OMXS30[OMXS30$Date %in% common_dates, ]
# Sort datasets by date
OMXC20_common <- OMXC20_common[order(OMXC20_common$Date), ]
OMXS30_common <- OMXS30_common[order(OMXS30_common$Date), ]
# Normalize starting from the first common date
OMXC20_common$Normalized <- OMXC20_common$Close.Last / OMXC20_common$Close.Last[1]
OMXS30_common$Normalized <- OMXS30_common$Close.Last / OMXS30_common$Close.Last[1]
# Plot the normalized data
plot(OMXC20_common$Date, OMXC20_common$Normalized, type = "l", col = "blue",
main = "Relative Close.Last Over Time for Scandinavian Indices",
xlab = "Date", ylab = "Relative Close.Last (Start = 1)")
install.packages("readxl")
# Load necessary libraries
library(dplyr)
library(readxl)
DanishBNP <- read_excel("Data/danishBNP.xlsx", sheet = 1)
DanishInflation <- read_excel("Data/danishinflation.xlsx", sheet = 1)
DanishInterestReate <- read_excel("Data/danishinterestrate.xlsx", sheet = 1)
DanishUnemployment <- read_excel("Data/danishunemployment.xlsx", sheet = 1)
SWEBNP <- read_excel("Data/SwedenGDP.xlsx", sheet = 1)
SWEInflation <- read_excel("Data/sweden-inflation-rate-cpi.xlsx", sheet = 1)
# Load necessary libraries
library(dplyr)
library(readxl)
DanishBNP <- read_excel("Data/danishBNP.xlsx", sheet = 1)
DanishInflation <- read_excel("Data/danishinflation.xlsx", sheet = 1)
DanishInterestReate <- read_excel("Data/danishinterestrate.xlsx", sheet = 1)
DanishUnemployment <- read_excel("Data/danishunemployment.xlsx", sheet = 1)
SWEBNP <- read_excel("Data/SwedenGDP.xlsx", sheet = 1)
SWEInflation <- read.csv("Data/sweden-inflation-rate-cpi.csv", sheet = 1)
# Load necessary libraries
library(dplyr)
library(readxl)
DanishBNP <- read_excel("Data/danishBNP.xlsx", sheet = 1)
DanishInflation <- read_excel("Data/danishinflation.xlsx", sheet = 1)
DanishInterestReate <- read_excel("Data/danishinterestrate.xlsx", sheet = 1)
DanishUnemployment <- read_excel("Data/danishunemployment.xlsx", sheet = 1)
SWEBNP <- read_excel("Data/SwedenGDP.xlsx", sheet = 1)
SWEInflation <- read.csv("Data/sweden-inflation-rate-cpi.csv")
SWEInterestReate <- read_excel("Data/swedeninterestrate.xlsx", sheet = 1)
# Load necessary libraries
library(dplyr)
library(readxl)
DanishBNP <- read_excel("Data/danishBNP.xlsx", sheet = 1)
DanishInflation <- read_excel("Data/danishinflation.xlsx", sheet = 1)
DanishInterestReate <- read_excel("Data/danishinterestrate.xlsx", sheet = 1)
DanishUnemployment <- read_excel("Data/danishunemployment.xlsx", sheet = 1)
SWEBNP <- read_excel("Data/SwedenGDP.xlsx", sheet = 1)
SWEInflation <- read.csv("Data/sweden-inflation-rate-cpi.csv")
SWEInterestReate <- read_excel("Data/swedeninterestrate.xls", sheet = 1)
SWEUnemployment <- read.csv("Data/sweden-unemployment-rate.csv")
# Read CSV files
OMXC20 <- read.csv("Data/OMXC20.csv")
OMXS30 <- read.csv("Data/OMXS30.csv")
# Load necessary libraries
library(dplyr)
library(zoo)
# Read CSV files
OMXC20 <- read.csv("Data/OMXC20.csv")
OMXS30 <- read.csv("Data/OMXS30.csv")
# Convert Date columns to Date format
OMXC20$Date <- as.Date(OMXC20$Date, format = "%m/%d/%Y")
OMXS30$Date <- as.Date(OMXS30$Date, format = "%m/%d/%Y")
# Ensure Close.Last is numeric
OMXC20$Close.Last <- as.numeric(OMXC20$Close.Last)
OMXS30$Close.Last <- as.numeric(OMXS30$Close.Last)
# Remove rows with NA values
OMXC20 <- na.omit(OMXC20)
OMXS30 <- na.omit(OMXS30)
# Select necessary columns and rename Close.Last
OMXC20_subset <- OMXC20 %>%
select(Date, Close.Last) %>%
rename(OMXC20_Close = Close.Last)
OMXS30_subset <- OMXS30 %>%
select(Date, Close.Last) %>%
rename(OMXS30_Close = Close.Last)
# Merge datasets using full_join to include all dates
merged_data <- full_join(OMXC20_subset, OMXS30_subset, by = "Date")
# Sort by Date
merged_data <- merged_data %>% arrange(Date)
# Forward fill missing values
merged_data$OMXC20_Close <- na.locf(merged_data$OMXC20_Close, na.rm = FALSE)
merged_data$OMXS30_Close <- na.locf(merged_data$OMXS30_Close, na.rm = FALSE)
# Remove any rows where either Close price is still NA
merged_data <- merged_data[!is.na(merged_data$OMXC20_Close) & !is.na(merged_data$OMXS30_Close), ]
# Normalize starting from the first date where both indices have data
merged_data$OMXC20_Normalized <- merged_data$OMXC20_Close / merged_data$OMXC20_Close[1]
merged_data$OMXS30_Normalized <- merged_data$OMXS30_Close / merged_data$OMXS30_Close[1]
# Plot the normalized data
plot(merged_data$Date, merged_data$OMXC20_Normalized, type = "l", col = "blue",
main = "Relative Close.Last Over Time for Scandinavian Indices",
xlab = "Date", ylab = "Relative Close.Last (Start = 1)")
lines(merged_data$Date, merged_data$OMXS30_Normalized, col = "green")
legend("topright", legend = c("OMXC20", "OMXS30"),
col = c("blue", "green"), lty = 1)
library(tseries)
# Run the ADF test on OMXC20 Close prices
adf_test_OMXC20 <- adf.test(OMXC20$OMXC20_Close, alternative = "stationary")
library(tseries)
# Run the ADF test on OMXC20 Close prices
adf_test_OMXC20 <- adf.test(OMXC20$OMXC20_Close, alternative = "stationary")
library(tseries)
# Run the ADF test on OMXC20 Close prices
adf_test_OMXC20 <- adf.test(OMXC20$OMXC20_Close, alternative = "stationary")
anyNA(OMXC20$OMXC20_Close)
anyNA(OMXS30$OMXS30_Close)
library(tseries)
# Run the ADF test on OMXC20 Close prices
adf_test_OMXC20 <- adf.test(OMXC20$OMXC20_Close, alternative = "stationary")
anyNA(OMXC20$OMXC20_Close)
anyNA(OMXS30$OMXS30_Close)
any(is.infinite(OMXC20$OMXC20_Close))
any(is.infinite(OMXS30$OMXS30_Close))
anyNA(OMXC20$OMXC20_Close)
anyNA(OMXS30$OMXS30_Close)
any(is.infinite(OMXC20$OMXC20_Close))
any(is.infinite(OMXS30$OMXS30_Close))
str(OMXC20)
str(OMXS30)
# Load necessary libraries
library(dplyr)
library(zoo)
# Convert Date columns to Date format
OMXC20$Date <- as.Date(OMXC20$Date, format = "%m/%d/%Y")
OMXS30$Date <- as.Date(OMXS30$Date, format = "%m/%d/%Y")
# Ensure Close.Last is numeric
OMXC20$Close.Last <- as.numeric(OMXC20$Close.Last)
OMXS30$Close.Last <- as.numeric(OMXS30$Close.Last)
# Remove rows with NA values
OMXC20 <- na.omit(OMXC20)
OMXS30 <- na.omit(OMXS30)
# Select necessary columns and rename Close.Last
OMXC20_subset <- OMXC20 %>%
select(Date, Close.Last) %>%
rename(OMXC20_Close = Close.Last)
OMXS30_subset <- OMXS30 %>%
select(Date, Close.Last) %>%
rename(OMXS30_Close = Close.Last)
# Merge datasets using full_join to include all dates
merged_data <- full_join(OMXC20_subset, OMXS30_subset, by = "Date")
# Sort by Date
merged_data <- merged_data %>% arrange(Date)
# Forward fill missing values
merged_data$OMXC20_Close <- na.locf(merged_data$OMXC20_Close, na.rm = FALSE)
merged_data$OMXS30_Close <- na.locf(merged_data$OMXS30_Close, na.rm = FALSE)
# Remove any rows where either Close price is still NA
merged_data <- merged_data[!is.na(merged_data$OMXC20_Close) & !is.na(merged_data$OMXS30_Close), ]
# Normalize starting from the first date where both indices have data
merged_data$OMXC20_Normalized <- merged_data$OMXC20_Close / merged_data$OMXC20_Close[1]
merged_data$OMXS30_Normalized <- merged_data$OMXS30_Close / merged_data$OMXS30_Close[1]
# Plot the normalized data
plot(merged_data$Date, merged_data$OMXC20_Normalized, type = "l", col = "blue",
main = "Relative Close.Last Over Time for Scandinavian Indices",
xlab = "Date", ylab = "Relative Close.Last (Start = 1)")
lines(merged_data$Date, merged_data$OMXS30_Normalized, col = "green")
legend("topright", legend = c("OMXC20", "OMXS30"),
col = c("blue", "green"), lty = 1)
library(tseries)
# Run the ADF test on OMXC20 Close prices
adf_test_OMXC20 <- adf.test(OMXC20$OMXC20_Close, alternative = "stationary")
library(tseries)
# Run the ADF test on OMXC20 Close prices
#adf_test_OMXC20 <- adf.test(OMXC20$OMXC20_Close, alternative = "stationary")
# Run the ADF test on OMXS30 Close prices
adf_test_OMXS30 <- adf.test(OMXS30$OMXS30_Close, alternative = "stationary")
adf_test_OMXC20 <- adf.test(OMXC20$OMXC20_Close, alternative = "stationary", k = 1)
View(OMXC20)
View(OMXC20)
View(OMXC20_common)
View(OMXC20_common)
View(OMXS30)
View(OMXS30)
library(tseries)
# Run the ADF test on OMXC20 Close prices
adf_test_OMXC20 <- adf.test(OMXC20$Close.Last, alternative = "stationary")
# Run the ADF test on OMXS30 Close prices
adf_test_OMXS30 <- adf.test(OMXS30$Close.Last, alternative = "stationary")
# Display the results
cat("ADF Test Result for OMXC20 Close Prices:\n")
print(adf_test_OMXC20)
cat("\nADF Test Result for OMXS30 Close Prices:\n")
print(adf_test_OMXS30)
View(DanishInflation)
View(DanishBNP)
View(DanishInflation)
View(DanishInflation)
View(DanishInterestReate)
View(DanishInterestReate)
View(merged_data)
View(merged_data)
View(DanishUnemployment)
View(DanishUnemployment)
View(DanishBNP)
View(DanishBNP)
View(OMXC20)
View(OMXC20_common)
View(OMXC20_subset)
View(SWEBNP)
View(SWEBNP)
View(SWEInflation)
View(SWEInflation)
View(SWEInterestReate)
View(SWEUnemployment)
View(DanishUnemployment)
# Load necessary libraries
library(dplyr)
library(readxl)
DanishBNP <- read_excel("Data/danishBNP.xlsx", sheet = 1)
DanishInflation <- read_excel("Data/danishinflation.xlsx", sheet = 1)
DanishInterestReate <- read_excel("Data/danishinterestrate.xlsx", sheet = 1)
DanishInterestReate <- DanishInterestReate[3:nrow(DanishInterestReate), ]
DanishUnemployment <- read_excel("Data/danishunemployment.xlsx", sheet = 1)
SWEBNP <- read_excel("Data/SwedenGDP.xlsx", sheet = 1)
View(DanishInterestReate)
SWEInflation <- read.csv("Data/sweden-inflation-rate-cpi.csv")
SWEInterestReate <- read_excel("Data/swedeninterestrate.xls", sheet = 1)
SWEUnemployment <- read.csv("Data/sweden-unemployment-rate.csv")
OMXC20 <- read.csv("Data/OMXC20.csv")
OMXS30 <- read.csv("Data/OMXS30.csv")
View(DanishInterestReate)
# Load necessary libraries
library(dplyr)
library(readxl)
DanishBNP <- read_excel("Data/danishBNP.xlsx", sheet = 1)
DanishInflation <- read_excel("Data/danishinflation.xlsx", sheet = 1)
DanishInflation <- DanishInflation[3:nrow(DanishInflation), ]
DanishInterestReate <- read_excel("Data/danishinterestrate.xlsx", sheet = 1)
DanishInterestReate <- DanishInterestReate[3:nrow(DanishInterestReate), ]
DanishUnemployment <- read_excel("Data/danishunemployment.xlsx", sheet = 1)
SWEBNP <- read_excel("Data/SwedenGDP.xlsx", sheet = 1)
SWEInflation <- read.csv("Data/sweden-inflation-rate-cpi.csv")
SWEInterestReate <- read_excel("Data/swedeninterestrate.xls", sheet = 1)
SWEUnemployment <- read.csv("Data/sweden-unemployment-rate.csv")
OMXC20 <- read.csv("Data/OMXC20.csv")
OMXS30 <- read.csv("Data/OMXS30.csv")
View(DanishInterestReate)
View(DanishInterestReate)
View(DanishInterestReate)
View(DanishInterestReate)
View(DanishInflation)
View(DanishInflation)
# Load necessary libraries
library(dplyr)
library(readxl)
DanishBNP <- read_excel("Data/danishBNP.xlsx", sheet = 1)
DanishInflation <- read_excel("Data/danishinflation.xlsx", sheet = 1)
DanishInflation <- DanishInflation[3:nrow(DanishInflation), ]
colnames(DanishInterestReate) <- c("year", "Inflation")
DanishInterestReate <- read_excel("Data/danishinterestrate.xlsx", sheet = 1)
DanishInterestReate <- DanishInterestReate[3:nrow(DanishInterestReate), ]
colnames(DanishInterestReate) <- c("year", "InterestRate")
DanishUnemployment <- read_excel("Data/danishunemployment.xlsx", sheet = 1)
SWEBNP <- read_excel("Data/SwedenGDP.xlsx", sheet = 1)
SWEInflation <- read.csv("Data/sweden-inflation-rate-cpi.csv")
SWEInterestReate <- read_excel("Data/swedeninterestrate.xls", sheet = 1)
SWEUnemployment <- read.csv("Data/sweden-unemployment-rate.csv")
OMXC20 <- read.csv("Data/OMXC20.csv")
OMXS30 <- read.csv("Data/OMXS30.csv")
View(OMXC20_common)
View(SWEUnemployment)
View(SWEUnemployment)
View(SWEInflation)
View(SWEUnemployment)
# Load necessary libraries
library(dplyr)
library(readxl)
DanishBNP <- read_excel("Data/danishBNP.xlsx", sheet = 1)
DanishInflation <- read_excel("Data/danishinflation.xlsx", sheet = 1)
DanishInflation <- DanishInflation[3:nrow(DanishInflation), ]
colnames(DanishInterestReate) <- c("year", "Inflation")
DanishInterestReate <- read_excel("Data/danishinterestrate.xlsx", sheet = 1)
DanishInterestReate <- DanishInterestReate[3:nrow(DanishInterestReate), ]
colnames(DanishInterestReate) <- c("year", "InterestRate")
DanishUnemployment <- read_excel("Data/danishunemployment.xlsx", sheet = 1)
SWEBNP <- read_excel("Data/SwedenGDP.xlsx", sheet = 1)
SWEInflation <- read.csv("Data/sweden-inflation-rate-cpi.csv")
SWEInterestReate <- read_excel("Data/swedeninterestrate.xls", sheet = 1)
SWEUnemployment <- read.csv("Data/sweden-unemployment-rate.csv", skip = 8)
OMXC20 <- read.csv("Data/OMXC20.csv")
OMXS30 <- read.csv("Data/OMXS30.csv")
View(SWEUnemployment)
View(SWEUnemployment)
View(SWEUnemployment)
View(SWEInterestReate)
# Load necessary libraries
library(dplyr)
library(readxl)
DanishBNP <- read_excel("Data/danishBNP.xlsx", sheet = 1)
DanishInflation <- read_excel("Data/danishinflation.xlsx", sheet = 1)
DanishInflation <- DanishInflation[3:nrow(DanishInflation), ]
colnames(DanishInterestReate) <- c("year", "Inflation")
DanishInterestReate <- read_excel("Data/danishinterestrate.xlsx", sheet = 1)
DanishInterestReate <- DanishInterestReate[3:nrow(DanishInterestReate), ]
colnames(DanishInterestReate) <- c("year", "InterestRate")
DanishUnemployment <- read_excel("Data/danishunemployment.xlsx", sheet = 1)
SWEBNP <- read_excel("Data/SwedenGDP.xlsx", sheet = 1)
SWEInflation <- read.csv("Data/sweden-inflation-rate-cpi.csv")
SWEInterestReate <- read_excel("Data/swedeninterestrate.xls", sheet = 1)
SWEUnemployment <- read.csv("Data/sweden-unemployment-rate.csv", skip = 8)
OMXC20 <- read.csv("Data/OMXC20.csv")
OMXS30 <- read.csv("Data/OMXS30.csv")
View(DanishUnemployment)
View(DanishInterestReate)
View(DanishInflation)
View(DanishBNP)
View(DanishInflation)
# Load necessary libraries
library(dplyr)
library(readxl)
DanishBNP <- read_excel("Data/danishBNP.xlsx", sheet = 1)
DanishInflation <- read_excel("Data/danishinflation.xlsx", sheet = 1)
DanishInflation <- DanishInflation[3:nrow(DanishInflation), ]
colnames(DanishInflation) <- c("year", "Inflation")
DanishInterestReate <- read_excel("Data/danishinterestrate.xlsx", sheet = 1)
DanishInterestReate <- DanishInterestReate[3:nrow(DanishInterestReate), ]
colnames(DanishInterestReate) <- c("year", "InterestRate")
DanishUnemployment <- read_excel("Data/danishunemployment.xlsx", sheet = 1)
SWEBNP <- read_excel("Data/SwedenGDP.xlsx", sheet = 1)
SWEInflation <- read.csv("Data/sweden-inflation-rate-cpi.csv")
SWEInterestReate <- read_excel("Data/swedeninterestrate.xls", sheet = 1)
SWEUnemployment <- read.csv("Data/sweden-unemployment-rate.csv", skip = 8)
OMXC20 <- read.csv("Data/OMXC20.csv")
OMXS30 <- read.csv("Data/OMXS30.csv")
View(DanishInflation)
View(DanishInflation)
View(DanishInterestReate)
View(DanishUnemployment)
View(merged_data)
View(DanishBNP)
library(tseries)
# Run the ADF test on market Close prices
adf_test_OMXC20 <- adf.test(OMXC20$Close.Last, alternative = "stationary")
adf_test_OMXS30 <- adf.test(OMXS30$Close.Last, alternative = "stationary")
# Display the results
cat("ADF Test Result for OMXC20 Close Prices:\n")
print(adf_test_OMXC20)
cat("\nADF Test Result for OMXS30 Close Prices:\n")
print(adf_test_OMXS30)
#Denmark
adf_test_DBNP <- adf.test(DanishBNP$`2020-priser, kædede værdier`, alternative = "stationary")
adf_test_Dinflation <- adf.test(DanishInflation$Inflation, alternative = "stationary")
# Load necessary libraries
library(dplyr)
library(readxl)
DanishBNP <- read_excel("Data/danishBNP.xlsx", sheet = 1)
DanishInflation <- read_excel("Data/danishinflation.xlsx", sheet = 1)
DanishInflation <- DanishInflation[3:nrow(DanishInflation), ]
colnames(DanishInflation) <- c("year", "Inflation")
DanishInflation <- na.omit(DanishInflation)
DanishInterestReate <- read_excel("Data/danishinterestrate.xlsx", sheet = 1)
DanishInterestReate <- DanishInterestReate[3:nrow(DanishInterestReate), ]
colnames(DanishInterestReate) <- c("year", "InterestRate")
DanishUnemployment <- read_excel("Data/danishunemployment.xlsx", sheet = 1)
SWEBNP <- read_excel("Data/SwedenGDP.xlsx", sheet = 1)
SWEInflation <- read.csv("Data/sweden-inflation-rate-cpi.csv")
SWEInterestReate <- read_excel("Data/swedeninterestrate.xls", sheet = 1)
SWEUnemployment <- read.csv("Data/sweden-unemployment-rate.csv", skip = 8)
OMXC20 <- read.csv("Data/OMXC20.csv")
OMXS30 <- read.csv("Data/OMXS30.csv")
library(tseries)
# Run the ADF test on market Close prices
adf_test_OMXC20 <- adf.test(OMXC20$Close.Last, alternative = "stationary")
adf_test_OMXS30 <- adf.test(OMXS30$Close.Last, alternative = "stationary")
# Display the results
cat("ADF Test Result for OMXC20 Close Prices:\n")
print(adf_test_OMXC20)
cat("\nADF Test Result for OMXS30 Close Prices:\n")
print(adf_test_OMXS30)
#Denmark
adf_test_DBNP <- adf.test(DanishBNP$`2020-priser, kædede værdier`, alternative = "stationary")
adf_test_Dinflation <- adf.test(DanishInflation$Inflation, alternative = "stationary")
adf_test_Dinterest <- adf.test(DanishInterestReate$InterestRate, alternative = "stationary")
library(tseries)
# Run the ADF test on market Close prices
adf_test_OMXC20 <- adf.test(OMXC20$Close.Last, alternative = "stationary")
adf_test_OMXS30 <- adf.test(OMXS30$Close.Last, alternative = "stationary")
# Display the results
cat("ADF Test Result for OMXC20 Close Prices:\n")
print(adf_test_OMXC20)
cat("\nADF Test Result for OMXS30 Close Prices:\n")
print(adf_test_OMXS30)
#Denmark
adf_test_DBNP <- adf.test(DanishBNP$`2020-priser, kædede værdier`, alternative = "stationary")
adf_test_Dinflation <- adf.test(DanishInflation$Inflation, alternative = "stationary")
adf_test_Dinterest <- adf.test(DanishInterestReate$InterestRate, alternative = "stationary")
View(DanishInterestReate)
View(DanishInterestReate)
# Load necessary libraries
library(dplyr)
library(readxl)
DanishBNP <- read_excel("Data/danishBNP.xlsx", sheet = 1)
DanishInflation <- read_excel("Data/danishinflation.xlsx", sheet = 1)
DanishInflation <- DanishInflation[3:nrow(DanishInflation), ]
colnames(DanishInflation) <- c("year", "Inflation")
DanishInflation <- na.omit(DanishInflation)
DanishInterestReate <- read_excel("Data/danishinterestrate.xlsx", sheet = 1)
DanishInterestReate <- DanishInterestReate[3:nrow(DanishInterestReate),35]
# Load necessary libraries
library(dplyr)
library(readxl)
DanishBNP <- read_excel("Data/danishBNP.xlsx", sheet = 1)
DanishInflation <- read_excel("Data/danishinflation.xlsx", sheet = 1)
DanishInflation <- DanishInflation[3:nrow(DanishInflation), ]
colnames(DanishInflation) <- c("year", "Inflation")
DanishInflation <- na.omit(DanishInflation)
DanishInterestReate <- read_excel("Data/danishinterestrate.xlsx", sheet = 1)
DanishInterestReate <- DanishInterestReate[3:35,]
colnames(DanishInterestReate) <- c("year", "InterestRate")
DanishInterestReate <- na.omit(DanishInterestReate)
DanishUnemployment <- read_excel("Data/danishunemployment.xlsx", sheet = 1)
SWEBNP <- read_excel("Data/SwedenGDP.xlsx", sheet = 1)
SWEInflation <- read.csv("Data/sweden-inflation-rate-cpi.csv")
SWEInterestReate <- read_excel("Data/swedeninterestrate.xls", sheet = 1)
SWEUnemployment <- read.csv("Data/sweden-unemployment-rate.csv", skip = 8)
OMXC20 <- read.csv("Data/OMXC20.csv")
OMXS30 <- read.csv("Data/OMXS30.csv")
View(OMXC20_subset)
View(DanishInterestReate)
View(DanishInterestReate)
# Load necessary libraries
library(dplyr)
library(readxl)
DanishBNP <- read_excel("Data/danishBNP.xlsx", sheet = 1)
DanishInflation <- read_excel("Data/danishinflation.xlsx", sheet = 1)
DanishInflation <- DanishInflation[3:nrow(DanishInflation), ]
colnames(DanishInflation) <- c("year", "Inflation")
DanishInflation <- na.omit(DanishInflation)
DanishInterestReate <- read_excel("Data/danishinterestrate.xlsx", sheet = 1)
DanishInterestReate <- DanishInterestReate[3:37,]
colnames(DanishInterestReate) <- c("year", "InterestRate")
DanishInterestReate <- na.omit(DanishInterestReate)
DanishUnemployment <- read_excel("Data/danishunemployment.xlsx", sheet = 1)
SWEBNP <- read_excel("Data/SwedenGDP.xlsx", sheet = 1)
SWEInflation <- read.csv("Data/sweden-inflation-rate-cpi.csv")
SWEInterestReate <- read_excel("Data/swedeninterestrate.xls", sheet = 1)
SWEUnemployment <- read.csv("Data/sweden-unemployment-rate.csv", skip = 8)
OMXC20 <- read.csv("Data/OMXC20.csv")
OMXS30 <- read.csv("Data/OMXS30.csv")
View(DanishInterestReate)
library(tseries)
# Run the ADF test on market Close prices
adf_test_OMXC20 <- adf.test(OMXC20$Close.Last, alternative = "stationary")
adf_test_OMXS30 <- adf.test(OMXS30$Close.Last, alternative = "stationary")
# Display the results
cat("ADF Test Result for OMXC20 Close Prices:\n")
print(adf_test_OMXC20)
cat("\nADF Test Result for OMXS30 Close Prices:\n")
print(adf_test_OMXS30)
#Denmark
adf_test_DBNP <- adf.test(DanishBNP$`2020-priser, kædede værdier`, alternative = "stationary")
adf_test_Dinflation <- adf.test(DanishInflation$Inflation, alternative = "stationary")
adf_test_Dinterest <- adf.test(DanishInterestReate$InterestRate, alternative = "stationary")
adf_test_Dunemployment <- adf.test(DanishUnemployment$`Procent af arbejdsstyrken`, alternative = "stationary")
print(adf_test_DBNP)
print(adf_test_Dinflation)
print(adf_test_Dinterest)
print(adf_test_Dunemployment)
